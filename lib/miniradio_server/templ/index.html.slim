doctype html
html
    head
        meta charset="UTF-8"
        meta name="viewport" content="width=device-width, initial-scale=1.0"
        title Miniradio Server
        link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css" type="text/css"
        link rel="stylesheet" href="style/main.css" type="text/css"
        script src="https://cdn.jsdelivr.net/npm/hls.js@1"
    body
        h1 Straming List
        button id="startButton" Play all ▶️
        audio id="player" class="hidden" controles=true

        table.compact.striped id="playlistTable"
            thead
                tr
                    th scope="col" Play
                    th scope="col" Title
                    th scope="col" Artist
                    th scope="col" Album
            tbody

        javascript:
            const tracks = #{{JSON.generate(mp3_list)}};
            const tableBody = document.querySelector("#playlistTable tbody");
            const startButton = document.getElementById("startButton");
            const player = document.getElementById("player");

            let currentIndex = 0;
            let hls;

            tracks.forEach((track, index) => {
                const tr = document.createElement('tr');
                tr.dataset.index = index;
                tr.innerHTML = `<td>${index + 1}</td><td>${track.title || track.file}</td><td>${track.artist || ''}</td><td>${track.album || ''}</td>`;
                tr.addEventListener('click', () => {
                    playTrack(index);
                });
                tableBody.appendChild(tr);
            });

            function highlightTrack(index) {
                [...tableBody.children].forEach((row, i) => {
                    row.classList.toggle('active', i === index);
                });
            }

            function playTrack(index) {
                const track = tracks[index];
                if (!track) return;

                currentIndex = index;
                highlightTrack(index);

                // for Safari
                if (player.canPlayType('application/vnd.apple.mpegurl')) {
                    player.src = track.url;
                    player.load();
                    player.play();
                } else if (Hls.isSupported()) {
                    if (hls) hls.destroy();
                    hls = new Hls();
                    hls.loadSource(track.url);
                    hls.attachMedia(player);
                    player.play();
                }
            }

            player.addEventListener('ended', () => {
                if (currentIndex + 1 < tracks.length) {
                    playTrack(currentIndex + 1);
                } else {
                    highlightTrack(-1); // 再生完了
                }
            });

            startButton.addEventListener('click', () => {
                playTrack(0);
                startButton.style.display = 'none';
            });
        hr
        p Miniradio ver #{MiniradioServer::VERSION}
